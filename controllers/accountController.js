const adminModel = require('../models/adminModel');
const path = require('path');
const fs = require('fs');
const formidable = require('formidable');
const cloudinary = require('cloudinary').v2;

exports.index = async(req,res,next) => {
    const admin = await adminModel.getAdmin(res.locals.user._id);
    console.log('admin:',admin);
    res.render('account/account',{admin, username: res.locals.user.username});
}

// exports.edit = async(req,res,next) => {
//     const admin = await adminModel.getAdmin(res.locals.user._id);
//     console.log('admin:',admin);
//     res.redirect('account/account',{admin, username: res.locals.user.username});
// }

exports.edit = async (req, res, next) => {
    const form = formidable({ multiples: true });
    let m_files;
    const formfields = await new Promise(function (resolve, reject) {
        form.parse(req, function (err, fields, files) {
            if (err) {
                reject(err);
                return;
            }
            console.log("within form.parse method, subject field of fields object is: " + fields);
            m_files = files;
            resolve(fields);
        }); // form.parse
    });

    const coverImage = m_files.coverImage;
    const imageName = 'admin' + res.locals.user._id + "coverImg.jpg";
    if (coverImage && coverImage.size > 0) {
        let files = fs.readdirSync(path.join(__dirname,'..', 'public', 'images'));
        files.forEach(file => {
            if(file==imageName)
            fs.unlinkSync(path.join(__dirname,'..', 'public', 'images',imageName));
        });
        const oldPath = coverImage.path;
        const newPath = path.join(__dirname,'..', 'public', 'images',imageName);
        const rawData = fs.readFileSync(oldPath);
        fs.writeFile(newPath, rawData, function (err) {
            if (err) console.log("write file error:", err)
        })
    }
    let flag = 0;
    if (coverImage && coverImage.size > 0) {
        await cloudinary.uploader.upload(path.join(__dirname,'..', 'public', 'images',imageName), { public_id: 'admin' + res.locals.user._id, folder: 'GameStore/Users', unique_filename: false, overwrite: true, "width": 345, "height": 277 })
            .then(function (image) {
                console.log("** File Upload (Promise)");
                console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
                console.log("* " + image.public_id);
                console.log("* " + image.url);
                formfields.cover = image.url;
                console.log("*formfields", formfields);
                flag = 1;
            })
            .catch(function (err) {
                console.log();
                console.log("*** File Upload (Promise)");
                console.log("*formfields", formfields);
                flag = 1;
                if (err) { console.warn(err); }
            });
    }

    if (flag != 0) {
        await adminModel.updateById(res.locals.user._id, { username: formfields.name, phone: formfields.phone, email: formfields.email, cover: formfields.cover });
    }
    else {
        await adminModel.updateById(res.locals.user._id, { username: formfields.name, phone: formfields.phone, email: formfields.email });
    }

    const admin = await adminModel.getAdmin(res.locals.user._id);
    res.locals.user.username = admin.username;
    res.render('account/account',{admin, username: res.locals.user.username});

};

